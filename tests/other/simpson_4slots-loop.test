{
  @ (0:crit00, 1:crit00) false
  @ (0:crit01, 1:crit01) false
  @ (0:crit10, 1:crit10) false
  @ (0:crit11, 1:crit11) false
}


// Note: *very* slow analysis with no buffers partitioning abstraction

bool latest, reading, slot0, slot1;
int data00, data01, data10, data11;

not latest && not reading && data00 = 0 && data01 = 0 && data10 = 0 && data11 = 0 && not slot0 && not slot1

#### THREAD WRITER ####
in = 0

while true {
    in = in + 1

    pair_w = not reading

    // index_w = not slot[pair_w]

    if not pair_w {
       index_w = not slot0
    }

    if pair_w {
       index_w = not slot1
    }

    // data[pair_w][index_w] = in /* Critical sections */

    if not pair_w && not index_w {
       label crit00
       data00 = in
    }

    if not pair_w && index_w {
       label crit01
       data01 = in
    }

    if pair_w && not index_w {
       label crit10
       data10 = in
    }

    if pair_w && index_w {
       label crit11
       data11 = in
    }

    // slot[pair_w] = index_w

    // FIXME: add else to the language

    if not pair_w {
       slot0 = index_w
    }

    if pair_w {
       slot1 = index_w
    }

    // latest = pair_w

    latest = pair_w
    mfence

}

#### THREAD READER ####

while true {

    // pair_r = latest

    pair_r = latest

    // reading = pair_r

    reading = pair_r
    mfence

    // index_r = slot[pair_r]

    if not pair_r {
       index_r = slot0
    }

    if pair_r {
       index_r = slot1
    }

    // out = data[pair_r][index_r] /* Critical sections */

    if not pair_r && not index_r {
       label crit00
       out = data00
    }

    if not pair_r && index_r {
       label crit01
       out = data01
    }

    if pair_r && not index_r {
       label crit10
       out = data10
    }

    if pair_r && index_r {
       label crit11
       out = data11
    }
}
