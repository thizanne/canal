/* Verified with Mark/Polka, and widening step of 2 */

{ @ (0:critical, 1:critical) false }

turn = 0, flag0 = 0, flag1 = 0

#### thread T0 ####

while true {
    flag0 := 1
    mfence
    f1 := flag1
    while (f1 > 0) {
        t1 := turn
        if (t1 > 0) {
            flag0 := 0
            mfence
            t1 := turn
            while(t1 > 0) {
                t1 := turn
            }
            flag0 := 1
            mfence
        }
        f1:=flag1
    }
    label critical
    turn := 1
    mfence
    flag0 := 0
    mfence
}


#### thread T1 ####

while true {
    flag1 := 1
    mfence
    f2 := flag0
    while (f2 > 0) {
        t2 := turn
        if (t2 < 1) {
            flag1 := 0
            mfence
            t2 := turn
                while(t2 < 1) {
                t2 := turn
            }
            flag1 := 1
            mfence
        }
        f2 := flag0
    }
    label critical
    turn := 0
    mfence
    flag1 := 0
    mfence
}

/* program counters: ((pc{1} != 11) || (pc{2} != 11)) */
