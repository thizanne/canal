/* Verified with Mark/Polka, and widening step of 2 */

{ @ (0:critical, 1:critical) false }

int turn;
bool flag0, flag1;

turn = 0 && not flag0 && not flag1

#### thread T0 ####

while true {
    flag0 = true
    mfence
    f1 = flag1
    while (f1) {
        t1 = turn
        if (t1 > 0) {
            flag0 = false
            // mfence
            t1 = turn
            while(t1 > 0) {
                t1 = turn
            }
            flag0 = true
            mfence
        }
        f1=flag1
    }
    label critical
    turn = 1
    // mfence
    flag0 = false
    // mfence
}


#### thread T1 ####

while true {
    flag1 = true
    mfence
    f2 = flag0
    while (f2) {
        t2 = turn
        if (t2 < 1) {
            flag1 = false
            // mfence
            t2 = turn
                while(t2 < 1) {
                t2 = turn
            }
            flag1 = true
            mfence
        }
        f2 = flag0
    }
    label critical
    turn = 0
    // mfence
    flag1 = false
    // mfence
}

/* program counters: ((pc{1} != 11) || (pc{2} != 11)) */
